// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package kms_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google-beta/google-beta/acctest"
	"github.com/hashicorp/terraform-provider-google-beta/google-beta/envvar"
)

func TestAccKMSProjectKajPolicyConfig_kmsProjectKajPolicyConfigBasicExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"billing_account": envvar.GetTestBillingAccountFromEnv(t),
		"org_id":          envvar.GetTestOrgFromEnv(t),
		"random_suffix":   acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
		ExternalProviders: map[string]resource.ExternalProvider{
			"time": {},
		},
		Steps: []resource.TestStep{
			{
				Config: testAccKMSProjectKajPolicyConfig_kmsProjectKajPolicyConfigBasicExample(context),
			},
			{
				ResourceName:      "google_kms_project_kaj_policy_config.example",
				ImportState:       true,
				ImportStateVerify: true,
			},
		},
	})
}

func testAccKMSProjectKajPolicyConfig_kmsProjectKajPolicyConfigBasicExample(context map[string]interface{}) string {
	return acctest.Nprintf(`
# Create a project
resource "google_project" "kms_project" {
  provider        = google-beta
  project_id      = "tf-test-my-project%{random_suffix}"
  name            = "tf-test-my-project%{random_suffix}"
  org_id      	  = "%{org_id}"
  billing_account = "%{billing_account}"
  deletion_policy = "DELETE"
}

# Enable the Cloud KMS API.
resource "google_project_service" "kms_api_service" {
  provider                   = google-beta
  service                    = "cloudkms.googleapis.com"
  project                    = google_project.kms_project.project_id
  disable_dependent_services = true
  depends_on                 = [google_project.kms_project]
}

resource "time_sleep" "wait_enable_service_api" {
	depends_on	= [google_project_service.kms_api_service]
	create_duration	= "30s"
}

resource "google_kms_project_kaj_policy_config" "example" {
	provider 				= google-beta
	project 				= google_project.kms_project.project_id
	default_key_access_justification_policy {
		allowed_access_reasons = [
			"CUSTOMER_INITIATED_ACCESS",
			"GOOGLE_INITIATED_SYSTEM_OPERATION",
		]
	}
  	depends_on                 		= [time_sleep.wait_enable_service_api]
}
`, context)
}
